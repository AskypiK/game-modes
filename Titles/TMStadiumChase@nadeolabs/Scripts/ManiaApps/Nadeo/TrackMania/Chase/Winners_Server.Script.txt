
/**
 * Chase winners UI
 */
#Const Version    "2018-07-05"
#Const ScriptName "ManiaApps/Nadeo/TrackMania/Chase/Winners_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/TrackMania/Chase/Constants2.Script.txt" as Const

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Allow the display of the winners UI
 *	on the server or not
 *
 *	@param	_Enabled									True to display the winners UI
 *																		to the players on this server
 *																		False otherwise
 */
Void Enable(Boolean _Enabled) {
	declare netwrite Net_ChaseWinners_IsEnabled for Teams[0] = True;
	Net_ChaseWinners_IsEnabled = _Enabled;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Update the names of the winners
 *
 *	@param	_Winners									The score of the winning players
 *	@param	_Stats										The stats to display on the screen
 */
Void SetWinners(CTmScore[] _Winners, Integer[Integer] _Stats) {
	declare Names = Text[];
	declare Avatars = Text[];

	foreach (Winner in _Winners) {
		if (Winner != Null) {
			Names.add(Winner.User.Name);
			Avatars.add(Winner.User.AvatarUrl);
		}
	}

	declare netwrite Net_ChaseWinners_WinnerUpdate for Teams[0] = -1;
	declare netwrite Net_ChaseWinners_WinnerNames for Teams[0] = Text[];
	declare netwrite Net_ChaseWinners_WinnerAvatar for Teams[0] = Text[];
	declare netwrite Net_ChaseWinners_WinnerStats for Teams[0] = Integer[Integer];
	Net_ChaseWinners_WinnerNames = Names;
	Net_ChaseWinners_WinnerAvatar = Avatars;
	Net_ChaseWinners_WinnerStats = _Stats;
	Net_ChaseWinners_WinnerUpdate = Now;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Reset the names of the winners
Void ResetWinners() {
	SetWinners(CTmScore[], Integer[Integer]);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	Enable(False);
	ResetWinners();
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}