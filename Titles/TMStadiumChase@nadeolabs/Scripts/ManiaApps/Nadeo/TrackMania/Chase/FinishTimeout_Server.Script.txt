/**
 * Chase finish timeout UI
 */
#Const Version    "2018-06-15"
#Const ScriptName "ManiaApps/Nadeo/TrackMania/Chase/FinishTimeout_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/TrackMania/Chase/Constants2.Script.txt" as Const

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Setup the finish timeout of a player
 *
 *	@param	_EndTime									The count end time
 *																		The countdown is visible as long as
 *																		_EndTime is >= 0
 *	@param	_Player										The player to update
 */
Void SetTimeout(Integer _EndTime, CTmPlayer _Player) {
	if (_Player == Null) return;
	
	declare netwrite Net_ChaseFinishTimeout_EndTime for _Player = -1;
	Net_ChaseFinishTimeout_EndTime = _EndTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Display the finish failed pop-up
 *
 *	@param	_Duration									The display duration of the pop-up
 *	@param	_Player										The player seeing the pop-up
 */
Void PopFinishFailed(Integer _Duration, CTmPlayer _Player) {
	if (_Player == Null) return;
	
	declare netwrite Net_ChaseFinishTimeout_FinishFailedHideTime for _Player = -1;
	Net_ChaseFinishTimeout_FinishFailedHideTime = Now + _Duration;
}


// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Cancel the display of the finish failed pop-up
 *
 *	@param	_Player										The player receiving the cancelation
 */
Void CancelFinishFailed(CTmPlayer _Player) {
	if (_Player == Null) return;
	
	declare netwrite Net_ChaseFinishTimeout_FinishFailedHideTime for _Player = -1;
	Net_ChaseFinishTimeout_FinishFailedHideTime = -1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize the given player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CTmPlayer _Player) {
	SetTimeout(-1, _Player);
	CancelFinishFailed(_Player);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}