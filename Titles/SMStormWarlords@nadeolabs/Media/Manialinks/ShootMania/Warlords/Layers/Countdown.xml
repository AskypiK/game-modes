<manialink version="2" name="{( LayerName )}">
	<framemodel id="number">
		<quad posn="0 0 4" sizen="20 30" halign="center" valign="center" style="Bgs1" substyle="BgColorContour"/>
		<quad id="light" posn="0 0 0" sizen="14 19" halign="center" valign="center" style="Bgs1" substyle="BgButtonGlow" scale="2"/>
		<frame clip="1" clipsizen="19 29">
			<quad posn="0 5 3" sizen="20 10" halign="center" valign="bottom" image="file://Media/Manialinks/ShootMania/Warlords/Textures/Gauge/Gradient.png" opacity="0.5"/>
			<label id="value" posn="0 0 2" sizen="20 30" halign="center" valign="center" style="TextRaceChrono" textsize="20" text="0"/>
			<quad posn="0 15 1" sizen="20 30" halign="center" valign="top" style="Bgs1" substyle="BgGradBottom"/>
			<quad id="bg" posn="0 0 0" sizen="20 30" halign="center" valign="center" style="Bgs1" substyle="BgWindow4" opacity="0"/>
		</frame>
	</framemodel>
	<framemodel id="dot">
		<quad posn="0 0 4" sizen="20 30" halign="center" valign="center" style="Bgs1" substyle="BgColorContour"/>
		<quad id="light" posn="0 0 0" sizen="14 19" halign="center" valign="center" style="Bgs1" substyle="BgButtonGlow" scale="2"/>
		<frame clip="1" clipsizen="19 29">
			<quad posn="0 5 3" sizen="20 10" halign="center" valign="bottom" image="file://Media/Manialinks/ShootMania/Warlords/Textures/Gauge/Gradient.png" opacity="0.5"/>
			<label id="value" posn="0 0 2" sizen="20 30" halign="center" valign="center" style="TextRaceChrono" textsize="20" text=":"/>
			<quad posn="0 15 1" sizen="20 30" halign="center" valign="top" style="Bgs1" substyle="BgGradBottom"/>
			<quad id="bg" posn="0 0 0" sizen="20 30" halign="center" valign="center" style="Bgs1" substyle="BgWindow4" opacity="0.25"/>
		</frame>
	</framemodel>

	<frame posn="-80 0 1">
		<frameinstance id="h2" modelid="number"/>
		<frameinstance id="h1" modelid="number" posn="20"/>
		<frameinstance id="h0" modelid="number" posn="40"/>
		<frameinstance id="d1" modelid="dot" posn="60"/>
		<frameinstance id="m1" modelid="number" posn="80"/>
		<frameinstance id="m0" modelid="number" posn="100"/>
		<frameinstance id="d0" modelid="dot" posn="120"/>
		<frameinstance id="s1" modelid="number" posn="140"/>
		<frameinstance id="s0" modelid="number" posn="160"/>
	</frame>

	<quad sizen="320 180" halign="center" valign="center" image="file://Media/Manialinks/ShootMania/Warlords/Textures/Menu/bg2.png"/>

	<script><!--

		#Include "MathLib" as ML
		#Include "TextLib" as TL
		#Include "AnimLib" as AL

		#Const C_NumbersBgAnimationDuration	200

		declare Integer G_Time;

		CMlFrame GetHoursFrame(Integer _Index) {
			return (Page.GetFirstChild("h" ^ _Index) as CMlFrame);
		}

		CMlFrame GetMinutesFrame(Integer _Index) {
			return (Page.GetFirstChild("m" ^ _Index) as CMlFrame);
		}

		CMlFrame GetSecondsFrame(Integer _Index) {
			return (Page.GetFirstChild("s" ^ _Index) as CMlFrame);
		}

		CMlLabel GetValueLabel(CMlFrame _FrameInstance) {
			return (_FrameInstance.GetFirstChild("value") as CMlLabel);
		}

		CMlQuad GetBackgroundQuad(CMlFrame _FrameInstance) {
			return (_FrameInstance.GetFirstChild("bg") as CMlQuad);
		}

		CMlQuad GetLightQuad(CMlFrame _FrameInstance) {
			return (_FrameInstance.GetFirstChild("light") as CMlQuad);
		}

		Void Init() {
			G_Time = ML::Rand(0, 604800000);
		}

		Void LoopStart() {
			declare Integer LastNow for This = Now;
			G_Time -= Now - LastNow;
			LastNow = Now;


			declare Integer TimeInSeconds = G_Time / 1000;

			declare Integer Seconds	= TimeInSeconds % 60;
			declare Integer Minutes	= (TimeInSeconds / 60) % 60;
			declare Integer Hours	= (TimeInSeconds / 3600);

			declare Integer HoursHundreds	= Hours / 100;
			declare Integer HoursTens		= (Hours - HoursHundreds * 100) / 10;
			declare Integer HoursUnits		= Hours - HoursTens * 10 - HoursHundreds * 100;

			declare Integer MinutesTens		= Minutes / 10;
			declare Integer MinutesUnits	= Minutes - MinutesTens * 10;

			declare Integer SecondsTens		= Seconds / 10;
			declare Integer SecondsUnits	= Seconds - SecondsTens * 10;

			declare CMlLabel Hours2Label		= GetValueLabel(GetHoursFrame(2));
			declare CMlLabel Hours1Label		= GetValueLabel(GetHoursFrame(1));
			declare CMlLabel Hours0Label		= GetValueLabel(GetHoursFrame(0));

			declare CMlLabel Minutes1Label	= GetValueLabel(GetMinutesFrame(1));
			declare CMlLabel Minutes0Label	= GetValueLabel(GetMinutesFrame(0));

			declare CMlLabel Seconds1Label	= GetValueLabel(GetSecondsFrame(1));
			declare CMlLabel Seconds0Label	= GetValueLabel(GetSecondsFrame(0));

			Hours2Label.SetText(TL::ToText(HoursHundreds));
			Hours1Label.SetText(TL::ToText(HoursTens));
			Hours0Label.SetText(TL::ToText(HoursUnits));

			Minutes1Label.SetText(TL::ToText(MinutesTens));
			Minutes0Label.SetText(TL::ToText(MinutesUnits));

			Seconds1Label.SetText(TL::ToText(SecondsTens));
			Seconds0Label.SetText(TL::ToText(SecondsUnits));
		}

		Void Animate() {
			declare CMlFrame	Hours2Frame			= GetHoursFrame(2);
			declare CMlFrame	Hours1Frame			= GetHoursFrame(1);
			declare CMlFrame	Hours0Frame			= GetHoursFrame(0);

			declare CMlFrame	Minutes1Frame		= GetMinutesFrame(1);
			declare CMlFrame	Minutes0Frame		= GetMinutesFrame(0);

			declare CMlFrame	Seconds1Frame		= GetSecondsFrame(1);
			declare CMlFrame	Seconds0Frame		= GetSecondsFrame(0);

			declare CMlLabel	Hours2Label			= GetValueLabel(Hours2Frame);
			declare CMlLabel	Hours1Label			= GetValueLabel(Hours1Frame);
			declare CMlLabel	Hours0Label			= GetValueLabel(Hours0Frame);

			declare CMlLabel	Minutes1Label		= GetValueLabel(Minutes1Frame);
			declare CMlLabel	Minutes0Label		= GetValueLabel(Minutes0Frame);

			declare CMlLabel	Seconds1Label		= GetValueLabel(Seconds1Frame);
			declare CMlLabel	Seconds0Label		= GetValueLabel(Seconds0Frame);

			declare CMlQuad		Hours2BgQuad		= GetBackgroundQuad(Hours2Frame);
			declare CMlQuad		Hours1BgQuad		= GetBackgroundQuad(Hours1Frame);
			declare CMlQuad		Hours0BgQuad		= GetBackgroundQuad(Hours0Frame);

			declare CMlQuad		Minutes1BgQuad		= GetBackgroundQuad(Minutes1Frame);
			declare CMlQuad		Minutes0BgQuad		= GetBackgroundQuad(Minutes0Frame);

			declare CMlQuad		Seconds1BgQuad		= GetBackgroundQuad(Seconds1Frame);
			declare CMlQuad		Seconds0BgQuad		= GetBackgroundQuad(Seconds0Frame);

			declare CMlQuad		Hours2LightQuad		= GetLightQuad(Hours2Frame);
			declare CMlQuad		Hours1LightQuad		= GetLightQuad(Hours1Frame);
			declare CMlQuad		Hours0LightQuad		= GetLightQuad(Hours0Frame);

			declare CMlQuad		Minutes1LightQuad	= GetLightQuad(Minutes1Frame);
			declare CMlQuad		Minutes0LightQuad	= GetLightQuad(Minutes0Frame);

			declare CMlQuad		Seconds1LightQuad	= GetLightQuad(Seconds1Frame);
			declare CMlQuad		Seconds0LightQuad	= GetLightQuad(Seconds0Frame);


			declare Text	Hours2LabelLastValue				for Hours2Label;
			declare Integer	Hours2LabelValueChangeTimestamp		for Hours2Label;

			declare Text	Hours1LabelLastValue				for Hours1Label;
			declare Integer	Hours1LabelValueChangeTimestamp		for Hours1Label;

			declare Text	Hours0LabelLastValue				for Hours0Label;
			declare Integer	Hours0LabelValueChangeTimestamp		for Hours0Label;

			declare Text	Minutes1LabelLastValue				for Minutes1Label;
			declare Integer	Minutes1LabelValueChangeTimestamp	for Minutes1Label;

			declare Text	Minutes0LabelLastValue				for Minutes0Label;
			declare Integer	Minutes0LabelValueChangeTimestamp	for Minutes0Label;

			declare Text	Seconds1LabelLastValue				for Seconds1Label;
			declare Integer	Seconds1LabelValueChangeTimestamp	for Seconds1Label;

			declare Text	Seconds0LabelLastValue				for Seconds0Label;
			declare Integer	Seconds0LabelValueChangeTimestamp	for Seconds0Label;


			if (Hours2LabelLastValue != Hours2Label.Value) {
				Hours2LabelLastValue = Hours2Label.Value;
				Hours2LabelValueChangeTimestamp = Now;
			}

			if (Hours1LabelLastValue != Hours1Label.Value) {
				Hours1LabelLastValue = Hours1Label.Value;
				Hours1LabelValueChangeTimestamp = Now;
			}

			if (Hours0LabelLastValue != Hours0Label.Value) {
				Hours0LabelLastValue = Hours0Label.Value;
				Hours0LabelValueChangeTimestamp = Now;
			}

			if (Minutes1LabelLastValue != Minutes1Label.Value) {
				Minutes1LabelLastValue = Minutes1Label.Value;
				Minutes1LabelValueChangeTimestamp = Now;
			}

			if (Minutes0LabelLastValue != Minutes0Label.Value) {
				Minutes0LabelLastValue = Minutes0Label.Value;
				Minutes0LabelValueChangeTimestamp = Now;
			}

			if (Seconds1LabelLastValue != Seconds1Label.Value) {
				Seconds1LabelLastValue = Seconds1Label.Value;
				Seconds1LabelValueChangeTimestamp = Now;
			}

			if (Seconds0LabelLastValue != Seconds0Label.Value) {
				Seconds0LabelLastValue = Seconds0Label.Value;
				Seconds0LabelValueChangeTimestamp = Now;
			}

			Hours2BgQuad.Opacity		= AL::EaseOutSine(Now - Hours2LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);
			Hours1BgQuad.Opacity		= AL::EaseOutSine(Now - Hours1LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);
			Hours0BgQuad.Opacity		= AL::EaseOutSine(Now - Hours0LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);
			Minutes1BgQuad.Opacity		= AL::EaseOutSine(Now - Minutes1LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);
			Minutes0BgQuad.Opacity		= AL::EaseOutSine(Now - Minutes0LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);
			Seconds1BgQuad.Opacity		= AL::EaseOutSine(Now - Seconds1LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);
			Seconds0BgQuad.Opacity		= AL::EaseOutSine(Now - Seconds0LabelValueChangeTimestamp, 0.8, -0.8, C_NumbersBgAnimationDuration);

			Hours2LightQuad.Opacity		= AL::EaseOutSine(Now - Hours2LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);
			Hours1LightQuad.Opacity		= AL::EaseOutSine(Now - Hours1LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);
			Hours0LightQuad.Opacity		= AL::EaseOutSine(Now - Hours0LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);
			Minutes1LightQuad.Opacity	= AL::EaseOutSine(Now - Minutes1LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);
			Minutes0LightQuad.Opacity	= AL::EaseOutSine(Now - Minutes0LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);
			Seconds1LightQuad.Opacity	= AL::EaseOutSine(Now - Seconds1LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);
			Seconds0LightQuad.Opacity	= AL::EaseOutSine(Now - Seconds0LabelValueChangeTimestamp, 1., -1., C_NumbersBgAnimationDuration);

		}

		main() {

			Init();

			while (True) {
				LoopStart();

				Animate();
				yield;
			}

		}

	--></script>

</manialink>