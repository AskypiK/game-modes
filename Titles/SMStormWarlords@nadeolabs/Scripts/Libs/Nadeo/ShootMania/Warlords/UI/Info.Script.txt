#Include "Libs/Nadeo/Layers2.Script.txt"	as Layers
#Include "Libs/Nadeo/Uized.Script.txt"	as Uized

#Const C_LayerName				"Info"
#Const C_Address				"file://Media/Manialinks/ShootMania/Warlords/Layers/Info.xml"

#Const C_Uized_Vars				[
									["PanelImageUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/Info/Panel.png"],
									["EmblemBaseUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/World/Emblems/Emblem"],
									["HistoryEventsActionsBaseUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/Info/Actions/Action"]
								]


// ---------------------------------- //
/**
 * Shows the interface.
 */
Void Show() {

	Layers::Attach(C_LayerName);

}

// ---------------------------------- //
/**
 * Hides the interface.
 */
Void Hide() {

	Layers::Detach(C_LayerName);

}

Void HighlightPlayers(Integer[] _PlayerIds) {
	declare netwrite Integer[] Srv_UI_G_HighlightPlayerIds for Teams[0];
	Srv_UI_G_HighlightPlayerIds = _PlayerIds;
}

Void StopPlayerHighlight() {
	declare netwrite Integer[] Srv_UI_G_HighlightPlayerIds for Teams[0];
	Srv_UI_G_HighlightPlayerIds.clear();
}

Void ToggleReadyButtonVisibility(Boolean _Visibility) {
	declare netwrite Boolean Srv_UI_G_ReadyVisibility for Teams[0];
	Srv_UI_G_ReadyVisibility = _Visibility;
}

Void ShowReadyButton() {
	ToggleReadyButtonVisibility(True);
}

Void HideReadyButton() {
	ToggleReadyButtonVisibility(False);
}

Void UpdatePlayersReadyStates(Boolean[Integer] _PlayersActionStates) {

	declare netwrite Boolean[Integer] Srv_UI_G_PlayersReadyStates for Teams[0];
	Srv_UI_G_PlayersReadyStates = _PlayersActionStates;

}

Void ResetDiscardVassalBtn(CPlayer _Player) {
	declare CUIConfig UI = UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Integer Srv_UI_P_ResetVassalDiscardTimestamp for UI;
	Srv_UI_P_ResetVassalDiscardTimestamp = Now;
}

Void Unload() {
	StopPlayerHighlight();
	HideReadyButton();
	Layers::Destroy(C_LayerName);
}

Void Load(Integer _BlitzGold, Boolean _AntiVassalRevolt) {
	Unload();
	Uized::Prepare("LayerName", C_LayerName);
	Uized::Prepare("BlitzGold", _BlitzGold);
	Uized::Prepare("AntiVassalRevolt", _AntiVassalRevolt);
	Uized::Prepare(C_Uized_Vars);
	declare Text TemplateRendered = Uized::Render(C_Address);
	Layers::Create(C_LayerName, TemplateRendered);
}