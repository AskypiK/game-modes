#Include "Libs/Nadeo/Layers2.Script.txt"						as Layers
#Include "Libs/Nadeo/ShootMania/Warlords/UISync.Script.txt"	as UISync
#Include "Libs/Nadeo/Uized.Script.txt"						as Uized

// ---------------------------------- //

#Const C_LayerName	"BattleInGame"
#Const C_Address	"file://Media/Manialinks/ShootMania/Warlords/Layers/BattleInGame.xml"

#Const C_Uized_Vars	[
						["RightPanelBGImageUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/Battle/ModeRightUI.png"],
						["BaseCastleImageUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/World/Star3.png"],
						["SurrenderButtonImageUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/Battle/SurrenderButton.png"],
						["SurrenderButtonOverImageUrl", "file://Media/Manialinks/ShootMania/Warlords/Textures/Battle/SurrenderButtonOver.png"],
						["RearmorTextTranslated", _("Press [1] to rearmor")],
						["RespawnTextTranslated", _("Respawn")],
						["SurrenderTextTranslated", _("Surrender")]
					]

// ---------------------------------- //
/**
 * Generates the correct number of frame instances.
 *
 * @param _GatesCount The number of gates.
 * @return The manialink tags.
 */
Text Private_GetGateFrameInstancesText(Integer _GatesCount) {
	declare Text GatesText;
	for (IGate, 0, _GatesCount) {
		declare Real XPos = (IGate / 5) * 28.;
		declare Real YPos = -4. * (IGate % 5);
		GatesText ^= """<frameinstance modelid="ModelGate" id="Frame_Gate{{{ IGate }}}" posn="{{{ XPos }}} {{{ YPos }}} 0"/>""";
	}
	return GatesText;
}

// ---------------------------------- //
/**
 * Displays the UI layer.
 */
Void Show() {
	Layers::Attach(C_LayerName);
}

// ---------------------------------- //
/**
 * Hides the UI layer.
 */
Void Hide() {
	Layers::Detach(C_LayerName);
}

// ---------------------------------- //
/**
 * Destroys the UI layer.
 */
Void Unload() {
	if (Layers::Exists(C_LayerName)) Layers::Destroy(C_LayerName);
}

// ---------------------------------- //
/**
 * Builds the UI layer.
 *
 * @param _GatesCount The number of gates in the current map.
 */
Void Load(Integer _GatesCount, Integer _RearmorCost, Integer _CountdownTime) {
	Unload();

	Uized::Prepare("LayerName", C_LayerName);
	Uized::Prepare("GatesCount", _GatesCount);
	Uized::Prepare("RearmorCost", _RearmorCost);
	Uized::Prepare("CountdownTime", _CountdownTime);
	Uized::Prepare("Sync", UISync::ML_SyncUI());
	Uized::Prepare("GateFrameInstancesText", Private_GetGateFrameInstancesText(_GatesCount));
	Uized::Prepare(C_Uized_Vars);

	declare Text TemplateRendered = Uized::Render(C_Address);
	Layers::Create(C_LayerName, TemplateRendered);
}