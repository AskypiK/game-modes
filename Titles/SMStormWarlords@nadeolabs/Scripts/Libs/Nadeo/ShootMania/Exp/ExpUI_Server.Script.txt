/**
 * Store exp
 *
 */
#Const Version    "2016-11-25"
#Const ScriptName "Libs/Nadeo/ShootMania/Exp/Store.Script.txt"

// ---------------------------------- //
// Libraries
// ---------------------------------- //
#Include "Libs/Nadeo/Log.Script.txt" as Log

// ---------------------------------- //
// Functions
// ---------------------------------- //


Void SetMaxRoundGold(Integer _MaxGold) {
	declare netwrite Net_LibExpUI_MaxRoundGold for Teams[0] = 0;
	Net_LibExpUI_MaxRoundGold = _MaxGold;
}
// ---------------------------------- //
/** Set the gold layer visible in maniaapp
 *
 *	@param	_Visible									If the layer is visible
 *
 */
Void SetGoldUIVisibility(CSmPlayer _Player, Boolean _Visible) {
	if(_Player == Null) return;
	declare UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Net_LibExpUI_GoldVisibility for UI = False;
	Net_LibExpUI_GoldVisibility = _Visible;
}

// ---------------------------------- //
/** Set the item selector layer visible in maniaapp
 *
 *	@param	_Visible									If the layer is visible
 *
 */
Void SetUIItemSelectorVisibility(CSmPlayer _Player, Boolean _Visible) {
	if(_Player == Null) return;
	declare UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Net_LibExpUI_UIItemSelectorVisibility for UI = False;
	Net_LibExpUI_UIItemSelectorVisibility = _Visible;
}

// ---------------------------------- //
/** Update the gold in player's UI
 *
 *	@param	_Player										The player to check
 *
 *	@return														The amount of gold owned by the player
 */
Void UpdateUIGold(CSmPlayer _Player, Integer _TotalAmount, Integer _AmountPerRound) {
	if(_Player == Null) return;
	declare UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Integer Net_LibExpUI_GoldAmount for UI;
	Net_LibExpUI_GoldAmount = _TotalAmount;
	
	declare netwrite Integer Net_LibExpUI_RoundGoldWonAmount for UI;
	Net_LibExpUI_RoundGoldWonAmount = _AmountPerRound;
	
	declare netwrite Integer Net_LibExpUI_UpdateUIGold for UI;
	Net_LibExpUI_UpdateUIGold = Now;
}

Void UpdateItemSelection(CSmPlayer _Player, Text[Text] _ItemList) {
	if(_Player == Null) return;
	declare UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Text[Text] Net_LibExpUI_ItemList for UI;
	declare netwrite Integer		Net_LibExpUI_ItemList_Update for UI;
	Net_LibExpUI_ItemList.clear();
	Net_LibExpUI_ItemList = _ItemList;
	Net_LibExpUI_ItemList_Update = Now;
}

Void UpdateEquipedItem(CSmPlayer _Player, Text _EquipedItem) {
	if(_Player == Null) return;
	declare UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Text Net_LibExpUI_EquipedItem for UI;
	Net_LibExpUI_EquipedItem = _EquipedItem;
}

Void UpdateActionPressed(CSmPlayer _Player, Text _ActionPressed) {
	if(_Player == Null) return;
	declare UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Text 		Net_LibExpUI_ActionPressed 				for UI;
	declare netwrite Integer 	Net_LibExpUI_ActionPressed_Update 	for UI;
	Net_LibExpUI_ActionPressed 				= _ActionPressed;
	Net_LibExpUI_ActionPressed_Update 	= Now;
}