/**
 *	Exp Utils
 *
 *	Utilitary functions for Exp
 */
#Const Version    "2017-01-13"
#Const ScriptName "Libs/Nadeo/ShootMania/Exp/Utils.Script.txt"

// ---------------------------------- //
// Libraries
// ---------------------------------- //
#Include "TextLib" as TL
#Include "Libs/Nadeo/Log.Script.txt" as Log

// ---------------------------------- //
// Functions
// ---------------------------------- //
// ---------------------------------- //
// Public
// ---------------------------------- //
// ---------------------------------- //
/** Return the version number of the script
 *
 *  @return   The version number of the script
 */
Text GetScriptVersion() {
  return Version;
}

// ---------------------------------- //
/** Return the name of the script
 *
 *  @return   The name of the script
 */
Text GetScriptName() {
  return ScriptName;
}

// ---------------------------------- //
/** Transform a store url into an action
 *	or item url as the ones used with
 *	ActionList_Add() and ItemList_Add()
 *
 *	@param	_StoreUrl									The store url
 *
 *	@return														The converted url
 */
Text CleanStoreUrl(Text _StoreUrl) {
	declare CleanUrl = TL::Replace(_StoreUrl, "\\", "/");
	declare Folders = TL::Split("/", CleanUrl);
	// Remove starting /
	if (Folders.count > 1 && Folders[0] == "") {
		declare Removed = Folders.removekey(0);
	}
	// Remove root folder
	if (Folders.count > 1) {
		declare Removed = Folders.removekey(0);
		CleanUrl = TL::Join("/", Folders);
	}
	return CleanUrl;
}

// ---------------------------------- //
/** Determine from its url if an object 
 *	bought in the store is an Action
 *
 *	@param	_StoreUrl									The store url of the object
 *
 *	@return														True if it is an Action,
 *																		False otherwise
 */
Boolean IsUpgrade(Text _StoreUrl) {
	declare StoreUrl = TL::Replace(_StoreUrl, "/", "\\");
	return "\\Actions\\" == TL::SubText(StoreUrl, 0, 9) && !TL::Find("\\Skills\\", StoreUrl, True, True);
}

// ---------------------------------- //
/** Determine from its url if an object 
 *	bought in the store is a skill
 *
 *	@param	_StoreUrl									The store url of the object
 *
 *	@return														True if it is a skill,
 *																		False otherwise
 */
Boolean IsSkill(Text _StoreUrl) {
	declare StoreUrl = TL::Replace(_StoreUrl, "/", "\\");
	return "\\Actions\\" == TL::SubText(StoreUrl, 0, 9) && TL::Find("\\Skills\\", StoreUrl, True, True);
}

// ---------------------------------- //
/** Determine from its url if an object 
 *	bought in the store is an Item
 *
 *	@param	_StoreUrl									The store url of the object
 *
 *	@return														True if it is an Item,
 *																		False otherwise
 */
Boolean IsItem(Text _StoreUrl) {
	declare StoreUrl = TL::Replace(_StoreUrl, "/", "\\");
	return "\\Items\\" == TL::SubText(StoreUrl, 0, 7);
}