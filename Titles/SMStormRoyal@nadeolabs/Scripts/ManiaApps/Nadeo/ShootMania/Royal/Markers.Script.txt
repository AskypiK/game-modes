/**
 * Royal markers
 */
#Const Version    "2016-09-30"
#Const ScriptName "ManiaApps/Nadeo/ShootMania/Royal/Markers.Script.txt"

// ---------------------------------- //
// Libraries
// ---------------------------------- //
#Include "Libs/Nadeo/Log.Script.txt" as Log
#Include "ManiaApps/Nadeo/Layers.Script.txt" as Layers
#Include "ManiaApps/Nadeo/ShootMania/Royal/Common.Script.txt" as UICommon

// ---------------------------------- //
// Constants
// ---------------------------------- //
#Const C_PoleMarkImg "file://Media/Manialinks/Shootmania/Common/goal_cap.dds"

// ---------------------------------- //
// Globales
// ---------------------------------- //
declare Boolean G_CanDisplayMarkers;

// ---------------------------------- //
// Functions
// ---------------------------------- //
// ---------------------------------- //
// Public
// ---------------------------------- //
// ---------------------------------- //
/** Return the version number of the script
 *
 *  @return   The version number of the script
 */
Text GetScriptVersion() {
  return Version;
}

// ---------------------------------- //
/** Return the name of the script
 *
 *  @return   The name of the script
 */
Text GetScriptName() {
  return ScriptName;
}

// ---------------------------------- //
/** Get the markers manialink
 *
 *  @return                           The manialink
 */
Text Private_GetMarkersML() {
  return ""; //< Disabled because of crash
  return """
<manialink version="3" name="Royal:Markers">
<frame id="frame-global">
  <frame id="{{{UICommon::MarkerId_Pole()}}}">
    <quad size="7 10" halign="center" valign="center" image="{{{C_PoleMarkImg}}}" autoscale="false" colorize="000" />
  </frame>
</frame>
</manialink>
""";
}

// ---------------------------------- //
/// Update the UI
Void Yield() {
  declare CanDisplayMarkers = UICommon::GetMarkersVisibility(Playground.Teams[0]);
  if (G_CanDisplayMarkers != CanDisplayMarkers) {
    G_CanDisplayMarkers = CanDisplayMarkers;
    Layers::SetVisibility("Royal_Markers", CanDisplayMarkers);
  }
}

// ---------------------------------- //
/// Unload the library
Void Unload() {
  G_CanDisplayMarkers = True;

  Layers::Destroy("Royal_Markers");
}

// ---------------------------------- //
/// Load the library
Void Load() {
  Unload();

  Layers::Create("Royal_Markers", Private_GetMarkersML());
  Layers::SetType("Royal_Markers", CUILayer::EUILayerType::Markers);
}