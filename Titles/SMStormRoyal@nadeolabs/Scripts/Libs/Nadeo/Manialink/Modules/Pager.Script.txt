/**
 *	Pager module
 */
#Const Version    "2016-11-16"
#Const ScriptName "Libs/Nadeo/Manialink/Modules/Pager.Script.txt"

// ---------------------------------- //
// Libraries
// ---------------------------------- //
#Include "TextLib" as TL
#Include "Libs/Nadeo/Log.Script.txt" as Log
#Include "Libs/Nadeo/Manialink/ManiaView.Script.txt" as MV

// ---------------------------------- //
// Constants
// ---------------------------------- //
// Supported attributes
#Const C_Attributes [
	"data-mv-pager"
]
#Const C_Class "mv-pager"
#Const C_LogPrefix "[ManiaView][Pager]"

// ---------------------------------- //
// Functions
// ---------------------------------- //
// ---------------------------------- //
// Public
// ---------------------------------- //
// ---------------------------------- //
/** Return the version number of the script
 *
 *  @return   The version number of the script
 */
Text GetScriptVersion() {
  return Version;
}

// ---------------------------------- //
/** Return the name of the script
 *
 *  @return   The name of the script
 */
Text GetScriptName() {
  return ScriptName;
}

// ---------------------------------- //
// Get the class constant
Text Class() { return C_Class; }

// ---------------------------------- //
/** Run the module
 *
 *	@param	_Name											The name of the manialink
 *	@param	_Manialink								The manialink to process
 *
 *	@return														The processed manialink
 */
Text[][Integer] Run(Text _Name, Text[][Integer] _Manialink) {
	// Parse manialink and extract ManiaView attributes info
	if (_Manialink.existskey(MV::Slot_Manialink())) {
		declare Wrap = "<root>"^MV::CompileSlot(_Manialink[MV::Slot_Manialink()])^"</root>";
		declare XmlDoc = Xml.Create(Wrap, False, True, False);
		
		foreach (Node in XmlDoc.Nodes) {
			declare Attributes = MV::ExtractAttributes(Node, C_Class, C_Attributes);
			foreach (Attribute => Value in Attributes) {
				
			}
		}
		
		Xml.Destroy(XmlDoc);
	}
	
	declare Functions = """
// ---------------------------------- //
// Code generated by the Pager module
// of the ManiaView library
Void MV_Pager_NextPage(Text _PagerId) {
	log(Now^"> NextPage : "^_PagerId);
}

Void MV_Pager_PrevPage(Text _PagerId) {
	log(Now^"> PrevPage : "^_PagerId);
}
// ---------------------------------- //
""";
		
	return MV::Append(
		_Manialink,
		"",
		"",
		"",
		"",
		Functions,
		"",
		"",
		""
	);
}